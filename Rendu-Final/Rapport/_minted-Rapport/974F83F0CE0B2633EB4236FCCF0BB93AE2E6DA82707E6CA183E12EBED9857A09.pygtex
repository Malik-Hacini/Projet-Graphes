\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]

  \PYG{k}{class} \PYG{n+nc}{DiGraphe}\PYG{p}{:}
  \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,}\PYG{n}{noeuds}\PYG{p}{:} \PYG{n+nb}{list}\PYG{p}{[}\PYG{n+nb}{str}\PYG{p}{],}\PYG{n}{arcs\PYGZus{}ponderes} \PYG{p}{:} \PYG{n+nb}{set}\PYG{p}{[}\PYG{n+nb}{tuple}\PYG{p}{[}\PYG{n+nb}{str}\PYG{p}{,} \PYG{n+nb}{str}\PYG{p}{,} \PYG{n+nb}{int}\PYG{p}{]])}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{k+kc}{None}\PYG{p}{:}
\PYG{+w}{      }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Construit un graphe orienté à partir des deux ensembles le définissant :}
\PYG{l+s+sd}{      noeuds et arcs (pondérés). On suppose que le graphe est connexe. On le représentera}
\PYG{l+s+sd}{      En utilisant sa matrice d\PYGZsq{}adjacence (array numpy), et un dictionnaire des listes d\PYGZsq{}adjacence.}

\PYG{l+s+sd}{      Args:}
\PYG{l+s+sd}{          noeuds (dict[int,str])): noeuds du graphe orienté. La clé est un entier (pour ordonner les noeuds)}
\PYG{l+s+sd}{          et la valeur une chaine de caractères (l\PYGZsq{}information que porte le noeud)}

\PYG{l+s+sd}{          arcs\PYGZus{}ponderes (set[tuple[int,int,int]): arcs du graphe orienté.}
\PYG{l+s+sd}{          L\PYGZsq{}entier représente la pondération de l\PYGZsq{}arc.}
\PYG{l+s+sd}{      \PYGZdq{}\PYGZdq{}\PYGZdq{}}
      \PYG{n}{noeuds\PYGZus{}dict}\PYG{o}{=}\PYG{n+nb}{dict}\PYG{p}{()}

      \PYG{n}{i}\PYG{o}{=}\PYG{l+m+mi}{0}
      \PYG{k}{for} \PYG{n}{noeud} \PYG{o+ow}{in} \PYG{n}{noeuds}\PYG{p}{:}
          \PYG{n}{noeuds\PYGZus{}dict}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]}\PYG{o}{=} \PYG{n}{noeud}
          \PYG{n}{i}\PYG{o}{+=}\PYG{l+m+mi}{1}


      \PYG{n}{mat\PYGZus{}adj}\PYG{o}{=}\PYG{n}{np}\PYG{o}{.}\PYG{n}{full}\PYG{p}{((}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{noeuds}\PYG{p}{),}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{noeuds}\PYG{p}{)),} \PYG{n}{np}\PYG{o}{.}\PYG{n}{inf}\PYG{p}{)}

      \PYG{n}{keys}\PYG{o}{=}\PYG{n+nb}{list}\PYG{p}{(}\PYG{n+nb}{range}\PYG{p}{(}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{noeuds}\PYG{p}{)))}
      \PYG{n}{vals}\PYG{o}{=}\PYG{n+nb}{list}\PYG{p}{(}\PYG{n}{noeuds\PYGZus{}dict}\PYG{o}{.}\PYG{n}{values}\PYG{p}{())}
      \PYG{k}{for} \PYG{n}{arc} \PYG{o+ow}{in} \PYG{n}{arcs\PYGZus{}ponderes}\PYG{p}{:}
          \PYG{n}{ligne}\PYG{o}{=}\PYG{n}{keys}\PYG{p}{[}\PYG{n}{vals}\PYG{o}{.}\PYG{n}{index}\PYG{p}{(}\PYG{n}{arc}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{])]}
          \PYG{n}{col}\PYG{o}{=}\PYG{n}{keys}\PYG{p}{[}\PYG{n}{vals}\PYG{o}{.}\PYG{n}{index}\PYG{p}{(}\PYG{n}{arc}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{])]}
          \PYG{n}{mat\PYGZus{}adj}\PYG{p}{[}\PYG{n}{ligne}\PYG{p}{,}\PYG{n}{col}\PYG{p}{]}\PYG{o}{=}\PYG{n}{arc}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{]}

      \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{noeuds}\PYG{p}{)):}
          \PYG{n}{mat\PYGZus{}adj}\PYG{p}{[}\PYG{n}{i}\PYG{p}{,}\PYG{n}{i}\PYG{p}{]}\PYG{o}{=}\PYG{l+m+mi}{0}


      \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{dict\PYGZus{}adj}\PYG{o}{=}\PYG{p}{\PYGZob{}}\PYG{n}{key}\PYG{p}{:} \PYG{p}{[}\PYG{n}{keys}\PYG{p}{[}\PYG{n}{vals}\PYG{o}{.}\PYG{n}{index}\PYG{p}{(}\PYG{n}{a}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{])]} \PYG{k}{for} \PYG{n}{a} \PYG{o+ow}{in} \PYG{n}{arcs\PYGZus{}ponderes} \PYG{k}{if} \PYG{n}{a}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]}\PYG{o}{==}\PYG{n}{value}\PYG{p}{]} \PYG{k}{for} \PYG{n}{key}\PYG{p}{,}\PYG{n}{value} \PYG{o+ow}{in} \PYG{n}{noeuds\PYGZus{}dict}\PYG{o}{.}\PYG{n}{items}\PYG{p}{()\PYGZcb{}}
      \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{noeuds}\PYG{o}{=}\PYG{n}{noeuds\PYGZus{}dict}
      \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{mat\PYGZus{}adj}\PYG{o}{=}\PYG{n}{mat\PYGZus{}adj}
\end{Verbatim}
